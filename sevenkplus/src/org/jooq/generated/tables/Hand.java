/**
 * This class is generated by jOOQ
 */
package org.jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.generated.Keys;
import org.jooq.generated.Sevenkplus;
import org.jooq.generated.tables.records.HandRecord;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hand extends TableImpl<HandRecord> {

	private static final long serialVersionUID = 1390491643;

	/**
	 * The reference instance of <code>sevenkplus.hand</code>
	 */
	public static final Hand HAND = new Hand();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<HandRecord> getRecordType() {
		return HandRecord.class;
	}

	/**
	 * The column <code>sevenkplus.hand.id</code>.
	 */
	public final TableField<HandRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>sevenkplus.hand.tag</code>.
	 */
	public final TableField<HandRecord, String> TAG = createField("tag", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * Create a <code>sevenkplus.hand</code> table reference
	 */
	public Hand() {
		this("hand", null);
	}

	/**
	 * Create an aliased <code>sevenkplus.hand</code> table reference
	 */
	public Hand(String alias) {
		this(alias, HAND);
	}

	private Hand(String alias, Table<HandRecord> aliased) {
		this(alias, aliased, null);
	}

	private Hand(String alias, Table<HandRecord> aliased, Field<?>[] parameters) {
		super(alias, Sevenkplus.SEVENKPLUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<HandRecord, Integer> getIdentity() {
		return Keys.IDENTITY_HAND;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<HandRecord> getPrimaryKey() {
		return Keys.KEY_HAND_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<HandRecord>> getKeys() {
		return Arrays.<UniqueKey<HandRecord>>asList(Keys.KEY_HAND_PRIMARY, Keys.KEY_HAND_TAG);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Hand as(String alias) {
		return new Hand(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Hand rename(String name) {
		return new Hand(name, null);
	}
}
