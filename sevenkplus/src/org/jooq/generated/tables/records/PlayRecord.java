/**
 * This class is generated by jOOQ
 */
package org.jooq.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.generated.tables.Play;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayRecord extends UpdatableRecordImpl<PlayRecord> implements Record5<Integer, Integer, Integer, Byte, Byte> {

	private static final long serialVersionUID = 247059642;

	/**
	 * Setter for <code>sevenkplus.play.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sevenkplus.play.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>sevenkplus.play.playerid</code>.
	 */
	public void setPlayerid(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sevenkplus.play.playerid</code>.
	 */
	public Integer getPlayerid() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>sevenkplus.play.handid</code>.
	 */
	public void setHandid(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sevenkplus.play.handid</code>.
	 */
	public Integer getHandid() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>sevenkplus.play.vpip</code>.
	 */
	public void setVpip(Byte value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>sevenkplus.play.vpip</code>.
	 */
	public Byte getVpip() {
		return (Byte) getValue(3);
	}

	/**
	 * Setter for <code>sevenkplus.play.pfr</code>.
	 */
	public void setPfr(Byte value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>sevenkplus.play.pfr</code>.
	 */
	public Byte getPfr() {
		return (Byte) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, Integer, Byte, Byte> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, Integer, Byte, Byte> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Play.PLAY.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Play.PLAY.PLAYERID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Play.PLAY.HANDID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field4() {
		return Play.PLAY.VPIP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field5() {
		return Play.PLAY.PFR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getPlayerid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getHandid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value4() {
		return getVpip();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value5() {
		return getPfr();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayRecord value2(Integer value) {
		setPlayerid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayRecord value3(Integer value) {
		setHandid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayRecord value4(Byte value) {
		setVpip(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayRecord value5(Byte value) {
		setPfr(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayRecord values(Integer value1, Integer value2, Integer value3, Byte value4, Byte value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PlayRecord
	 */
	public PlayRecord() {
		super(Play.PLAY);
	}

	/**
	 * Create a detached, initialised PlayRecord
	 */
	public PlayRecord(Integer id, Integer playerid, Integer handid, Byte vpip, Byte pfr) {
		super(Play.PLAY);

		setValue(0, id);
		setValue(1, playerid);
		setValue(2, handid);
		setValue(3, vpip);
		setValue(4, pfr);
	}
}
